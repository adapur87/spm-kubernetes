{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./src/pages/contributing.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss"],"names":["PageHeader","title","tabs","className","cx","pageHeader","withTabs","length","id","text","EditLink","relativePagePath","repositoryProp","repository","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","theme","description","keywords","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-contributing-mdx-fc14ea189c8d28c77bea.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport { pageHeader, withTabs, text } from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, tabs = [] }) => (\n  <div className={cx(pageHeader, { [withTabs]: tabs.length })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const { tabs, title, theme, description, keywords } = frontmatter;\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader title={Title ? <Title /> : title} label=\"label\" tabs={tabs} />\n      {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/spm-kubernetes/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`This is a guide for contributing to the SPM DevOps runbook.`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Branch`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Status`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}><em parentName=\"td\">{`Master`}</em></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}><a parentName=\"td\" {...{\n              \"href\": \"https://travis-ci.com/IBM/spm-kubernetes\"\n            }}><img parentName=\"a\" {...{\n                \"src\": \"https://travis-ci.com/IBM/spm-kubernetes.svg?branch=master\",\n                \"alt\": \"Build Status\"\n              }}></img></a></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2>{`House Rules`}</h2>\n    <h3>{`Do’s`}</h3>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do`}</strong>{` your own lint check before committing.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do`}</strong>{` create your branch from the `}<inlineCode parentName=\"li\">{`master`}</inlineCode>{` branch to avoid conflicts.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do`}</strong>{` use good grammar.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do`}</strong>{` provide references to any external source materials.`}</li>\n    </ul>\n    <h3>{`Don’ts`}</h3>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do not`}</strong>{` creates branches from `}<inlineCode parentName=\"li\">{`gh-pages`}</inlineCode>{` branch.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Do not`}</strong>{` commit directly to `}<inlineCode parentName=\"li\">{`master`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`gh-pages`}</inlineCode>{` branches.`}</li>\n    </ul>\n    <h2>{`Prerequisites`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`NodeJS 12.x`}</li>\n      <li parentName=\"ul\">{`Markdown-compatible editor`}</li>\n    </ul>\n    <h2>{`Setting up`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Install Gatsby and MarkdownLint CLI tools:`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`npm install -g gatsby markdownlint-cli`}</inlineCode></li>\n        </ul></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://services.github.com/on-demand/github-desktop/install-github-desktop\"\n        }}>{`Install and Setup GitHub Desktop`}</a>{` on your laptop`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://help.github.com/desktop/guides/getting-started-with-github-desktop/authenticating-to-github/\"\n        }}>{`Sign into GitHub from GitHub Desktop`}</a></li>\n      <li parentName=\"ul\">{`Learn `}<a parentName=\"li\" {...{\n          \"href\": \"https://guides.github.com/features/mastering-markdown/\"\n        }}>{`Markdown Syntax`}</a>{` and notice the formatting standards in the existing docs for examples of how we want you to construct a page`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/IBM/spm-kubernetes\"\n        }}>{`Clone this repository`}</a>{` to your local workstation from the GitHub UI or `}<a parentName=\"li\" {...{\n          \"href\": \"https://services.github.com/on-demand/github-desktop/clone-repository-github-desktop\"\n        }}>{`use GitHub Desktop`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://services.github.com/on-demand/github-desktop/create-branches-github-desktop\"\n        }}>{`Create a branch`}</a>{` from the `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/IBM/spm-kubernetes/tree/master\"\n        }}>{`master branch`}</a></li>\n    </ul>\n    <h2>{`Authoring`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Make the changes locally, and build the static content for previewing:`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`run `}<inlineCode parentName=\"li\">{`gatsby build`}</inlineCode>{` OR,`}</li>\n          <li parentName=\"ul\">{`run `}<inlineCode parentName=\"li\">{`gatsby develop`}</inlineCode>{` to view your changes in your `}<a parentName=\"li\" {...{\n              \"href\": \"http://localhost:8000\"\n            }}>{`browser`}</a>{` as soon as you save.`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Check your code and validate the formatting`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`run `}<inlineCode parentName=\"li\">{`markdownlint **/*.mdx`}</inlineCode></li>\n        </ul></li>\n      <li parentName=\"ul\">{`Add and push local commits with GitHub Desktop or the `}<inlineCode parentName=\"li\">{`git`}</inlineCode>{` command.`}</li>\n      <li parentName=\"ul\">{`Open a Pull Request when you are ready to merge your changes.`}</li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};"],"sourceRoot":""}